# kate: encoding UTF-8; remove-trailing-space on; replace-trailing-space-save on; space-indent on; indent-width 2;
#  ruby-hunspell - Ruby bindings for Hunspell library
#  Copyright (C) 2006, Diego Petten√≤
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this software; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
{
  bindings: "hunspell",
  includes: [
    "<hunspell.hxx>"
  ],
  namespaces: [
    { name: "Hunspell",
      cxxname: "",
      classes: [
        { name: "Hunspell",
	  methods: [
	    { name: "Hunspell",
	      params: [
	        {name: "affpath", type: "char*"},
		{name: "dpath", type: "char*"}
	      ]
	    },
	    { name: "spell", return: "bool",
	      params: [
	        {name: "word", type: "char*"}
	      ]
	    },
	    { name: "suggest", custom: "yes",
	      custom_prototype: "VALUE hunspell_suggest(VALUE self, VALUE word)",
	      custom_name: "hunspell_suggest", custom_paramcount: 1 },
	    { name: "put_word",
	      params: [ {name: "word", type: "char*"} ]
	    },
	    { name: "put_word_suffix",
	      params: [ {name: "word", type: "char*"},
	      	        {name: "suffix", type: "char*"} ]
	    },
	    { name: "put_word_pattern",
	      params: [ {name: "word", type: "char*"},
	      	        {name: "pattern", type: "char*"} ]
	    },
	    
	    # Other functions
	    { name: "get_dic_encoding", return: "char*" },
	    { name: "get_wordchars", return "const char*" },
	    # Missing: get_wordchars_utf16
	    # Missing: get_csconv
	    # Missing: get_utf_conv
	    { name: "get_version", return: "char*" },

	    # Morphological analysis
	    { name: "morph", return: "char*",
	      params: [ {name: "word", type: "char*"} ]
	    },
	    # Missing: analyze
	    { name: "morph_with_correction", return: "char*",
	      params: [ {name: "word", type: "char*"} ]
	    }
	  ]
	}
      ]
    }
  ]
}
